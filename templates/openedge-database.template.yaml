AWSTemplateFormatVersion: 2010-09-09
Description: >-
  OpenEdge Database infrastructure with Replication Set (qs-1rus69tf0)
Parameters:
  DeployBucket:
    Description: S3 bucket containing deployment packages.
    Type: String
    MinLength: 1
  DeployBucketRegion:
    Description: Region in which the deployment packages are stored.
    Type: String
    MinLength: 1
    Default: us-east-1
  DBDeployPackage:
    Description: URL to package to deploy databases into database EC2 instances
    Type: String
  InstanceType:
    Description: EC2 instance type
    Type: String
    Default: t3a.medium
    AllowedValues:
      - t3a.small
      - t3a.medium
      - t3a.large
      - t3a.xlarge
      - t3a.2xlarge
    ConstraintDescription: must be a valid EC2 instance type.
  EmailAddress:
    Description: Email Address for notification
    Type: String
    AllowedPattern: >-
      ([a-zA-Z0-9_\-\.]+)@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([a-zA-Z0-9\-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)
    ConstraintDescription: Must be a valid email id.
  KeyPairName:
    Type: "AWS::EC2::KeyPair::KeyName"
    ConstraintDescription: Name of an existing EC2 KeyPair.
  PrivateSubnet1ID:
    Description: Private Subnet Id 1
    Type: "AWS::EC2::Subnet::Id"
  PrivateSubnet2ID:
    Description: Private Subnet Id 2
    Type: "AWS::EC2::Subnet::Id"
  VPCID:
    Description: "ID of the VPC (e.g., vpc-0343606e)"
    Type: "AWS::EC2::VPC::Id"
  PortNumber:
    Description: Port number to use to connect to the database broker process
    Type: Number
  MinPort:
    Description: Use Minimum Dynamic Server (-minport) number to specify the lowest port number in a specified range of port numbers accessible to a client.
    Type: Number
    Default: 1025
  MaxPort:
    Description: Use Maximum Dynamic Server (-minport) number to specify the highest port number in a specified range of port numbers accessible to a client.
    Type: Number
    Default: 2000
  QSS3BucketName:
    AllowedPattern: "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$"
    ConstraintDescription: "Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-)."
    Default: aws-quickstart
    Description: "S3 bucket name for the Quick Start assets. Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-)."
    Type: String
  QSS3BucketRegion:
    Default: 'us-east-1'
    Description: "AWS Region where the Quick Start S3 bucket (QSS3BucketName) is hosted. If you use your own bucket, specify that value."
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: "^[0-9a-zA-Z-/]*$"
    ConstraintDescription: "Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/)."
    Default: quickstart-progress-openedge/
    Description: "S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/)."
    Type: String
Mappings:
  AWSAMIRegionMap:
    AMI:
      OEDBAMZNLINUX2: Amazon Linux 2 AMI with OpenEdge Database
    af-south-1:
      OEDBAMZNLINUX2: ami-0e02b8f101080c860
    ap-east-1:
      OEDBAMZNLINUX2: ami-0028e76d264c49d58
    ap-northeast-1:
      OEDBAMZNLINUX2: ami-03e9a7f428f86afb5
    ap-northeast-2:
      OEDBAMZNLINUX2: ami-085867c1ec05e3d12
    ap-south-1:
      OEDBAMZNLINUX2: ami-044b122f91731f3d5
    ap-southeast-1:
      OEDBAMZNLINUX2: ami-051c2efd83ec16118
    ap-southeast-2:
      OEDBAMZNLINUX2: ami-00cff12184f288dd4
    ca-central-1:
      OEDBAMZNLINUX2: ami-0377d3f773dbf351b
    eu-central-1:
      OEDBAMZNLINUX2: ami-0b0ad022d3b1d0635
    eu-north-1:
      OEDBAMZNLINUX2: ami-0f4aad1eec158009b
    eu-south-1:
      OEDBAMZNLINUX2: ami-0f9155fd22102c26e
    eu-west-1:
      OEDBAMZNLINUX2: ami-04717e3a535c18acd
    eu-west-2:
      OEDBAMZNLINUX2: ami-0a12a304843439d6f
    eu-west-3:
      OEDBAMZNLINUX2: ami-0a561eca7c7f44082
    sa-east-1:
      OEDBAMZNLINUX2: ami-0ac4686074285c467
    us-east-1:
      OEDBAMZNLINUX2: ami-0bf4db03f64f2d604
    us-east-2:
      OEDBAMZNLINUX2: ami-078a3e307ceb0b5e2
    us-west-1:
      OEDBAMZNLINUX2: ami-0439069a7d2b0f4dc
    us-west-2:
      OEDBAMZNLINUX2: ami-03b02f8cee114fd06
Resources:
  NotificationTopic:
    Type: "AWS::SNS::Topic"
    Properties:
      Subscription:
        - Endpoint: !Ref EmailAddress
          Protocol: email
  S3AccessRole:
    Type: "AWS::IAM::Role"
    Properties:
      Path: "/"     
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - 'ec2.amazonaws.com'
          Action: sts:AssumeRole
  S3AccessRolePolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: S3AccessRolePolicy
      PolicyDocument:
        Version: "2012-10-17"
        Statement:       
        - Effect: Allow
          Action:
          - s3:Get*
          - s3:List*
          - s3:AbortMultipartUpload
          Resource:
            - !Sub 'arn:${AWS::Partition}:s3:::${DeployBucket}/${DBDeployPackage}*'
            - !Sub 'arn:${AWS::Partition}:s3:::${DeployBucket}'
            - !Sub 'arn:${AWS::Partition}:s3:::${DeployBucket}/*'
      Roles:
        - Ref: S3AccessRole
  S3AccessProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      Path: /
      Roles:
        - !Ref S3AccessRole
  SourceReplica:
    Type: "AWS::EC2::Instance"
    Metadata:
#      "AWS::CloudFormation::Init":
#        config:
#          awscli:
#            commands:
#              00_set_default_s3_signature_version:
#                command: aws configure set default.s3.signature_version s3v4
#              01_set_default_region:
#                command: !Sub "aws configure set default.region '${AWS::Region}'"
#          files:
#            "/install/app.tar.gz":
#              source: !Sub 'https://${DeployBucket}.s3.${DeployBucketRegion}.${AWS::URLSuffix}/${DBDeployPackage}'
#              mode: '000755'
#              owner: ec2-user
#              group: ec2-user
#              authentication: S3AccessCreds
      'AWS::CloudFormation::Authentication':
        S3AccessCreds:
          type: S3
          roleName: !Ref S3AccessRole
    Properties:
      IamInstanceProfile: !Ref S3AccessProfile
      ImageId: !FindInMap
        - AWSAMIRegionMap
        - !Ref 'AWS::Region'
        - OEDBAMZNLINUX2
      InstanceType: !Ref InstanceType
      SubnetId: !Ref PrivateSubnet1ID
      SecurityGroupIds:
        - !Ref InstanceSecurityGroup
      Tags:
        - Key: Name
          Value: db0
      KeyName: !Ref KeyPairName
      UserData: !Base64 
        'Fn::Sub':
          - >
            #!/bin/bash -x

            # Setup Databases

            aws configure set default.s3.signature_version s3v4

            aws configure set default.region ${DeployRegion}'

            mkdir -p /install

            aws s3 cp ${DeployPackage} /install/app.tar.gz

            export OE_ENV=db0

            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource SourceReplica --region ${AWS::Region}

            tar xCf /install /install/app.tar.gz

            /install/app/deploy.sh

          - DeployRegion: !Ref DeployBucketRegion
            DeployPackage: !Sub 's3://${DeployBucket}/${DBDeployPackage}'
  TargetReplicaOne:
    Type: "AWS::EC2::Instance"
    Metadata:
#      "AWS::CloudFormation::Init":
#        config:
#          awscli:
#            commands:
#              00_set_default_s3_signature_version:
#                command: aws configure set default.s3.signature_version s3v4
#              01_set_default_region:
#                command: !Sub "aws configure set default.region '${DeployBucketRegion}'"
#          files:
#            "/install/app.tar.gz":
#              source: !Sub 'https://${DeployBucket}.s3.${DeployBucketRegion}.${AWS::URLSuffix}/${DBDeployPackage}'
#              mode: '000755'
#              owner: ec2-user
#              group: ec2-user
#              authentication: S3AccessCreds
      'AWS::CloudFormation::Authentication':
        S3AccessCreds:
          type: S3
          roleName: !Ref S3AccessRole
    Properties:
      IamInstanceProfile: !Ref S3AccessProfile
      ImageId: !FindInMap
        - AWSAMIRegionMap
        - !Ref 'AWS::Region'
        - OEDBAMZNLINUX2
      InstanceType: !Ref InstanceType
      SubnetId: !Ref PrivateSubnet2ID
      SecurityGroupIds:
        - !Ref InstanceSecurityGroup
      Tags:
        - Key: Name
          Value: db1
      KeyName: !Ref KeyPairName
      UserData: !Base64 
        'Fn::Sub':
          - >
            #!/bin/bash -x

            # Setup Databases

            mkdir -p /install

            aws s3 cp ${DeployPackage} /install/app.tar.gz

            OE_ENV=db1

            export OE_ENV

            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource SourceReplica --region ${AWS::Region}

            tar xCf /install /install/app.tar.gz

            /install/app/deploy.sh

          - DeployRegion: !Ref DeployBucketRegion
            DeployPackage: !Sub 's3://${DeployBucket}/${DBDeployPackage}'   
  TargetReplicaTwo:
    Type: "AWS::EC2::Instance"
    Metadata:
#      "AWS::CloudFormation::Init":
#        config:
#          awscli:
#            commands:
#              00_set_default_s3_signature_version:
#                command: aws configure set default.s3.signature_version s3v4
#              01_set_default_region:
#                command: !Sub "aws configure set default.region '${AWS::Region}'"
#          files:
#            "/install/app.tar.gz":
#              source: !Sub 'https://${DeployBucket}.s3.${DeployBucketRegion}.${AWS::URLSuffix}/${DBDeployPackage}'
#              mode: '000755'
#              owner: ec2-user
#              group: ec2-user
#              authentication: S3AccessCreds
      'AWS::CloudFormation::Authentication':
        S3AccessCreds:
          type: S3
          roleName: !Ref S3AccessRole
    Properties:
      IamInstanceProfile: !Ref S3AccessProfile
      ImageId: !FindInMap
        - AWSAMIRegionMap
        - !Ref 'AWS::Region'
        - OEDBAMZNLINUX2
      InstanceType: !Ref InstanceType
      SubnetId: !Ref PrivateSubnet1ID
      SecurityGroupIds:
        - !Ref InstanceSecurityGroup
      Tags:
        - Key: Name
          Value: db2
      KeyName: !Ref KeyPairName
      UserData: !Base64 
        'Fn::Sub':
          - >
            #!/bin/bash -x

            # Setup Databases

            mkdir -p /install

            aws s3 cp ${DeployPackage} /install/app.tar.gz

            OE_ENV=db2

            export OE_ENV

            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource SourceReplica --region ${AWS::Region}

            tar xCf /install /install/app.tar.gz

            /install/app/deploy.sh

          - DeployRegion: !Ref DeployBucketRegion
            DeployPackage: !Sub 's3://${DeployBucket}/${DBDeployPackage}'
  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable access to the Database Instance (SSH, DB)
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: '0.0.0.0/0'
        - IpProtocol: tcp
          FromPort: !Ref MinPort
          ToPort: !Ref MaxPort
          CidrIp: '0.0.0.0/0'
        - IpProtocol: tcp
          FromPort: !Ref PortNumber
          ToPort: !Ref PortNumber
          CidrIp: '0.0.0.0/0'
      VpcId: !Ref VPCID
Outputs:
  DBHostName:
    Description: Private IP Address of db0 instance
    Value:
      Fn::GetAtt:
      - SourceReplica
      - PrivateIp
  DBHostName1:
    Description: Private IP Address of db0 instance
    Value:
      Fn::GetAtt:
      - TargetReplicaOne
      - PrivateIp
  DBHostName2:
    Description: Private IP Address of db0 instance
    Value:
      Fn::GetAtt:
      - TargetReplicaTwo
      - PrivateIp
