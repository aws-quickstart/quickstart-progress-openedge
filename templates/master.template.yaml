---
AWSTemplateFormatVersion: 2010-09-09

Description: "Deploys a three-tier Progress OpenEdge stack into a new VPC (qs-1qtcokh3l)"

Metadata:
  QuickStartDocumentation:
    EntrypointName: "Launch into a new VPC"
  LICENSE: Apache License Version 2.0
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: AWS VPC Parameters
        Parameters:
          - AvailabilityZones
      - Label:
          default: OpenEdge Parameters
        Parameters:
          - RemoteAccessCIDR
          - WebAccessCIDR
          - EmailAddress
          - DBDeployPackage
          - PASOEDeployPackage
          - WebDeployPackage
      - Label:
          default: OpenEdge Database Configuration
        Parameters:
          - PortNumber
          - MinPort
          - MaxPort
      - Label:
          default: Network Configuration
        Parameters:
          - PrivateSubnet1CIDR
          - PrivateSubnet2CIDR
          - PublicSubnet1CIDR
          - PublicSubnet2CIDR
          - VPCCIDR
      - Label:
          default: Amazon EC2 Configuration
        Parameters:
          - KeyPairName
          - BastionAMIOS
          - BastionInstanceType
          - InstanceType
          - MinScalingInstances
          - MaxScalingInstances
      - Label:
          default: AWS Quick Start Configuration
        Parameters:
          - QSS3BucketName
          - QSS3BucketRegion
          - QSS3KeyPrefix
    ParameterLabels:
      AvailabilityZones:
        default: Availability zones
      KeyPairName:
        default: EC2 key pair name
      RemoteAccessCIDR:
        default: Remote access CIDR
      WebAccessCIDR:
        default: Web access CIDR
      EmailAddress:
        default: Email address
      DBDeployPackage:
        default: DB deploy package
      PASOEDeployPackage:
        default: PASOE deploy package
      WebDeployPackage:
        default: Web deploy package
      PortNumber:
        default: Port number
      MinPort: 
        default: Min port
      MaxPort:
        default: Max port
      PrivateSubnet1CIDR:
        default: Private subnet 1 CIDR
      PrivateSubnet2CIDR:
        default: Private subnet 2 CIDR
      PublicSubnet1CIDR:
        default: Public subnet 1 CIDR
      PublicSubnet2CIDR:
        default: Public subnet 2 CIDR
      VPCCIDR:
        default: VPC CIDR
      BastionAMIOS:
        default: Bastion AMI OS
      BastionInstanceType:
        default: Bastion instance type
      InstanceType:
        default: Instance type
      MinScalingInstances:
        default: Minimum Instances in ASG
      MaxScalingInstances:
        default: Maximum Instances in ASG
      QSS3BucketName:
        default: Quick Start S3 Bucket Name
      QSS3BucketRegion:
        default: Quick Start S3 bucket region
      QSS3KeyPrefix:
        default: Quick Start S3 Key Prefix
Parameters:
  DBDeployPackage:
    Description: S3 URL to package to deploy databases into database EC2 instances
    Type: String
    MinLength: 1
  PASOEDeployPackage:
    Description: S3 URL to package to deploy databases into PASOE EC2 instances
    Type: String
    MinLength: 1
  WebDeployPackage:
    Description: S3 URL to package to deploy Web UI into WebServer EC2 instances
    Type: String
    MinLength: 1
  PortNumber:
    Description: Port number to use to connect to the database broker process
    Type: Number
    Default: 20000
  MinPort:
    Description: Use Minimum Dynamic Server (-minport) number to specify the lowest port number in a specified range of port numbers accessible to a client.
    Type: Number
    Default: 1025
  MaxPort:
    Description: Use Maximum Dynamic Server (-minport) number to specify the highest port number in a specified range of port numbers accessible to a client.
    Type: Number
    Default: 2000
  EmailAddress:
    AllowedPattern: "([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)"
    ConstraintDescription: "Must be a valid email id."
    Description: "Email Address for notification"
    Type: String
  AvailabilityZones:
    Description:
      List of Availability Zones to use for the subnets in the VPC. Only
      two Availability Zones are used for this deployment, and the logical order of
      your selections is preserved.
    Type: List<AWS::EC2::AvailabilityZone::Name>
  InstanceType:
    AllowedValues:
      - t3a.small
      - t3a.medium
      - t3a.large
      - t3a.xlarge
      - t3a.2xlarge
    ConstraintDescription: "must be a valid EC2 instance type."
    Default: t3a.medium
    Description: "EC2 instance type"
    Type: String
  BastionAMIOS:
    AllowedValues:
      - Amazon-Linux-HVM
      - CentOS-7-HVM
      - Ubuntu-Server-14.04-LTS-HVM
      - Ubuntu-Server-16.04-LTS-HVM
    Default: Amazon-Linux-HVM
    Description: The Linux distribution for the AMI to be used for the bastion instances
    Type: String
  BastionInstanceType:
    AllowedValues:
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
    Default: t2.micro
    Description: Amazon EC2 instance type for the bastion instances
    Type: String
  KeyPairName:
    ConstraintDescription: "Name of an existing EC2 KeyPair."
    Type: "AWS::EC2::KeyPair::KeyName"
  PrivateSubnet1CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.0.0/19
    Description: CIDR block for private subnet 1 located in Availability Zone 1
    Type: String
  PrivateSubnet2CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.32.0/19
    Description: CIDR block for private subnet 2 located in Availability Zone 2
    Type: String
  PublicSubnet1CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.128.0/20
    Description:
      CIDR block for the public (DMZ) subnet 1 located in Availability
      Zone 1
    Type: String
  PublicSubnet2CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.144.0/20
    Description:
      CIDR block for the public (DMZ) subnet 2 located in Availability
      Zone 2
    Type: String
  VPCCIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.0.0/16
    Description: CIDR block for the VPC
    Type: String
  QSS3BucketName:
    AllowedPattern: "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$"
    ConstraintDescription: "Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-)."
    Default: aws-quickstart
    Description: "S3 bucket name for the Quick Start assets. Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-)."
    Type: String
  QSS3BucketRegion:
    Default: 'us-east-1'
    Description: 'The AWS Region where the Quick Start S3 bucket (QSS3BucketName) is hosted. When using your own bucket, you must specify this value.'
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: "^[0-9a-zA-Z-/]*$"
    ConstraintDescription: "Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/)."
    Default: quickstart-progress-openedge/
    Description: "S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/)."
    Type: String
  RemoteAccessCIDR:
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$"
    ConstraintDescription: "CIDR block parameter must be in the form x.x.x.x/x"
    Description: "Allowed CIDR block for external SSH access"
    Type: String
  WebAccessCIDR:
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$"
    ConstraintDescription: "CIDR block parameter must be in the form x.x.x.x/x"
    Description: "Allowed CIDR block for web access"
    Type: String
  MinScalingInstances:
    Default: '2'
    Description: Minimum number of EC2 instances in ASG
    Type: String
  MaxScalingInstances:
    Default: '8'
    Description: Maximum number of EC2 instances in ASG
    Type: String
Conditions:
  UsingDefaultBucket: !Equals [!Ref QSS3BucketName, 'aws-quickstart']
Resources:
  VPCStack:
    Type: "AWS::CloudFormation::Stack"
    Properties:
      TemplateURL:
        !Sub
          - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}submodules/quickstart-aws-vpc/templates/aws-vpc.template
          - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
            S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        AvailabilityZones: !Join
          - ","
          - !Ref AvailabilityZones
        KeyPairName: !Ref KeyPairName
        NumberOfAZs: "2"
        PrivateSubnet1ACIDR: !Ref PrivateSubnet1CIDR
        PrivateSubnet2ACIDR: !Ref PrivateSubnet2CIDR
        PublicSubnet1CIDR: !Ref PublicSubnet1CIDR
        PublicSubnet2CIDR: !Ref PublicSubnet2CIDR
        VPCCIDR: !Ref VPCCIDR
  BastionStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:
        !Sub
          - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}submodules/quickstart-linux-bastion/templates/linux-bastion.template
          - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
            S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        BastionAMIOS:
          Ref: BastionAMIOS
        BastionInstanceType:
          Ref: BastionInstanceType
        KeyPairName:
          Ref: KeyPairName
        PublicSubnet1ID:
          Fn::GetAtt:
            - VPCStack
            - Outputs.PublicSubnet1ID
        PublicSubnet2ID:
          Fn::GetAtt:
            - VPCStack
            - Outputs.PublicSubnet2ID
        QSS3BucketName:
          Ref: QSS3BucketName
        QSS3BucketRegion:
          Ref: QSS3BucketRegion
        QSS3KeyPrefix:
          Fn::Sub: ${QSS3KeyPrefix}submodules/quickstart-linux-bastion/
        RemoteAccessCIDR:
          Ref: RemoteAccessCIDR
        VPCID:
          Fn::GetAtt:
            - VPCStack
            - Outputs.VPCID
  DatabaseStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:
        !Sub
          - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/openedge-database.template.yaml
          - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
            S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        EmailAddress:
          Ref: EmailAddress
        InstanceType:
          Ref: InstanceType
        KeyPairName:
          Ref: KeyPairName
        PrivateSubnet1ID:
          Fn::GetAtt:
            - VPCStack
            - Outputs.PrivateSubnet1AID
        PrivateSubnet2ID:
          Fn::GetAtt:
            - VPCStack
            - Outputs.PrivateSubnet2AID
        VPCID:
          Fn::GetAtt:
            - VPCStack
            - Outputs.VPCID
        PortNumber:
          Ref: PortNumber
        MinPort:
          Ref: MinPort
        MaxPort:
          Ref: MaxPort
        DBDeployPackage:
          Ref: DBDeployPackage
  PASOEStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:
        !Sub
          - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/openedge-pasoe.template.yaml
          - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
            S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        EmailAddress:
          Ref: EmailAddress
        InstanceType:
          Ref: InstanceType
        KeyPairName:
          Ref: KeyPairName
        MinScalingInstances:
          Ref: MinScalingInstances
        MaxScalingInstances:
          Ref: MaxScalingInstances
        PrivateSubnet1ID:
          Fn::GetAtt:
            - VPCStack
            - Outputs.PrivateSubnet1AID
        PrivateSubnet2ID:
          Fn::GetAtt:
            - VPCStack
            - Outputs.PrivateSubnet2AID
        PublicSubnet1ID:
          Fn::GetAtt:
            - VPCStack
            - Outputs.PublicSubnet1ID
        PublicSubnet2ID:
          Fn::GetAtt:
            - VPCStack
            - Outputs.PublicSubnet2ID
        WebAccessCIDR:
          Ref: WebAccessCIDR
        VPCID:
          Fn::GetAtt:
            - VPCStack
            - Outputs.VPCID
        DBHostName:
          Fn::GetAtt:
            - DatabaseStack
            - Outputs.DBHostName
        DBHostName1:
          Fn::GetAtt:
            - DatabaseStack
            - Outputs.DBHostName1
        DBHostName2:
          Fn::GetAtt:
            - DatabaseStack
            - Outputs.DBHostName2
        PASOEDeployPackage:
          Ref: PASOEDeployPackage
  WebServerStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:
        !Sub
          - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/webserver.template.yaml
          - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
            S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        EmailAddress:
          Ref: EmailAddress
        InstanceType:
          Ref: InstanceType
        KeyPairName:
          Ref: KeyPairName
        MinScalingInstances:
          Ref: MinScalingInstances
        MaxScalingInstances:
          Ref: MaxScalingInstances
        PrivateSubnet1ID:
          Fn::GetAtt:
            - VPCStack
            - Outputs.PrivateSubnet1AID
        PrivateSubnet2ID:
          Fn::GetAtt:
            - VPCStack
            - Outputs.PrivateSubnet2AID
        PublicSubnet1ID:
          Fn::GetAtt:
            - VPCStack
            - Outputs.PublicSubnet1ID
        PublicSubnet2ID:
          Fn::GetAtt:
            - VPCStack
            - Outputs.PublicSubnet2ID
        WebAccessCIDR:
          Ref: WebAccessCIDR
        VPCID:
          Fn::GetAtt:
            - VPCStack
            - Outputs.VPCID
        PASOEURL:
          Fn::GetAtt:
            - PASOEStack
            - Outputs.URL
        WebDeployPackage:
          Ref: WebDeployPackage
Outputs:
  WebURL:
    Description: "The web server URL"
    Value:
      Fn::GetAtt:
        - WebServerStack
        - Outputs.URL
  PASOEURL:
    Description: "The PASOE URL"
    Value:
      Fn::GetAtt:
        - PASOEStack
        - Outputs.URL
